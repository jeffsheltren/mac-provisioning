---
###############################################################################
# AMP                                                                         #
###############################################################################

- name: Stop built-in Apache
  command: /usr/sbin/apachectl stop
  become: yes
  changed_when: false
  tags:
    - apache

- name: Don't autoload built-in Apache
  command: launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist
  become: yes
  changed_when: false
  tags:
    - apache

- name: Install Apache from homebrew
  homebrew:
    name: httpd
    state: present
    install_options: with-brewed-openssl,with-mpm-event
  tags:
    - apache

- name: configure httpd.conf (replace)
  replace:
    dest: /usr/local/etc/httpd/httpd.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp: '^( *Listen) .*$',                                  replace: '\1 8080' }
    - { regexp: '^( *)# *(LoadModule rewrite_module +.*)$',         replace: '\1\2' }   # just comment in
    - { regexp: '^( *)# *(LoadModule expires_module +.*)$',         replace: '\1\2' }   # just comment in
    - { regexp: '^( *)# *(LoadModule deflate_module +.*)$',         replace: '\1\2' }   # just comment in
    - { regexp: '^( *)# *(LoadModule headers_module +.*)$',         replace: '\1\2' }   # just comment in
    - { regexp: '^( *)# *(LoadModule actions_module +.*)$',         replace: '\1\2' }   # just comment in
    - { regexp: '^( *)# *(LoadModule socache_shmcb_module +.*)$',   replace: '\1\2' }   # just comment in, for SSL
    - { regexp: '^( *User) .*$',                                    replace: '\1 {{ ansible_user_id }}' }
    - { regexp: '^( *Group) .*$',                                   replace: '\1 {{ apache_group }}' }
    - { regexp: '^( *)# *(LoadModule ssl_module +.*)$',             replace: '\1\2' }   # just comment in
    - { regexp: '^( *)# *(Include /usr/local/etc/httpd/extra/httpd-ssl\.conf)$',             replace: '\1\2' }   # just comment in
  tags:
    - apache

- name: configure httpd-ssl.conf (replace)
  replace:
    dest: /usr/local/etc/httpd/extra/httpd-ssl.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp: '^( *)((?!\# *))(SSLCertificateFile +)(.*)$',       replace: '\1\3"/Volumes/webdev/.httpd/ssl/selfsigned.crt"' }
    - { regexp: '^( *)((?!\# *))(SSLCertificateKeyFile +)(.*)$',    replace: '\1\3"/Volumes/webdev/.httpd/ssl/private.key"' }
  tags:
    - apache

- name: Create apache ssl folder
  file:
    path: /Volumes/webdev/.httpd/ssl
    state: directory
  tags:
    - apache

- stat: path=/Volumes/webdev/.httpd/ssl/selfsigned.crt
  register: httpd_ssl_exists
  changed_when: false
  tags:
    - apache

- name: Create SSL certificate
  command: |
    openssl req \
    -new \
    -newkey rsa:2048 \
    -days 3650 \
    -nodes \
    -x509 \
    -subj /C=BE/ST=Oost-Vlaanderen/L=Gent/O={{ ssl_organization }}/OU=$(whoami)/CN=*.test \
    -keyout /Volumes/webdev/.httpd/ssl/private.key \
    -out /Volumes/webdev/.httpd/ssl/selfsigned.crt
  when: httpd_ssl_exists.stat.exists == false
  tags:
    - apache

- name: (Auto-)start homebrew Apache
  command: brew services start httpd
  changed_when: false
  tags:
    - apache

- name: Install firewall rule for httpd port forwarding
  copy:
    src: "files/co.echo.httpdfwd.plist"
    dest: "/Library/LaunchDaemons/co.echo.httpdfwd.plist"
  become: yes
  tags:
    - apache

- name: Activate firewall rule for httpd port forwarding
  command: launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist
  become: yes
  changed_when: false
  tags:
    - apache

- name: Install MariaDB from homebrew
  homebrew:
    name: mariadb
    state: present
  tags:
    - mariadb

- name: Install MariaDB config files
  copy:
    src: "files/my.cnf.d/{{ item }}"
    dest: "/usr/local/etc/my.cnf.d/{{ item }}"
  with_items:
    - mysqld.cnf
    - innodb.cnf
  tags:
    - mariadb

- name: (Auto-)start homebrew MariaDB
  command: brew services start mariadb
  changed_when: false
  tags:
    - mariadb

- name: Add mariadb user .my.cnf
  template:
    src: my.cnf.j2
    dest: $HOME/.my.cnf
    mode: 0600
  tags:
    - mariadb

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: false
  tags:
    - mariadb

- name: Remove anonymous users
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User=''
  changed_when: false
  tags:
    - mariadb

- name: Disallow root login remotely
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false
  tags:
    - mariadb

- name: Remove test database and access to it
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DROP DATABASE IF EXISTS test
    - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
  changed_when: false
  tags:
    - mariadb

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: false
  tags:
    - mariadb

- name: Install PHP from homebrew
  homebrew:
    name: "{{ item }}"
    state: present
  with_items:
    - php@5.6
    - php@7.1
    - php@7.2
  tags:
    - php

- name: Configure php.ini of php 5.6
  replace:
    dest: /usr/local/etc/php/5.6/php.ini
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items: "{{ php_configs }}"
  tags:
    - php

- name: Configure php.ini of php71
  replace:
    dest: /usr/local/etc/php/7.1/php.ini
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items: "{{ php_configs }}"
  tags:
    - php

- name: Configure php.ini of php 7.2
  replace:
    dest: /usr/local/etc/php/7.2/php.ini
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items: "{{ php_configs }}"
  tags:
    - php

# - name: Link PHP 7.1
#   command: brew link php@7.1 --force
#   # ignore_errors: yes
#   # changed_when: false
#   tags:
#     - php

- name: Add php files to DirectoryIndex
  replace:
    dest: /usr/local/etc/httpd/httpd.conf
    regexp: '^( *DirectoryIndex) .*$'
    replace: '\1 index.php index.html index.htm'
  tags:
    - apache

- name: Create apache conf.d and vhosts folder
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/Volumes/webdev/.httpd/conf.d"
    - "/Volumes/webdev/.httpd/vhosts"
  tags:
    - apache

- name: Add conf.d and vhosts folder to httpd.conf
  lineinfile:
    dest: /usr/local/etc/httpd/httpd.conf
    line: "{{ item.line }}"
  with_items:
    - { line: "Include /Volumes/webdev/.httpd/conf.d" }
    - { line: "Include /Volumes/webdev/.httpd/vhosts" }
  tags:
    - apache
