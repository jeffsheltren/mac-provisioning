---
###############################################################################
# AMP                                                                         #
###############################################################################

- name: Create hammp bin folder
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/Volumes/webdev/bin"
  tags:
    - apache
    - php
    - mariadb

- name: Create apache conf.d and vhosts folder
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/Volumes/webdev/.httpd/conf.d"
    - "/Volumes/webdev/.httpd/vhosts"
  tags:
    - apache

- name: Install hammp bin files
  copy:
    src: "files/bin/{{ item }}.sh"
    dest: "/Volumes/webdev/bin/{{ item }}"
    mode: 0755
  with_items:
    - hammp
    - sphp
  tags:
    - apache
    - php
    - mariadb

- name: Stop built-in Apache
  command: /usr/sbin/apachectl stop
  become: yes
  changed_when: false
  tags:
    - apache

- name: Don't autoload built-in Apache
  command: launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist
  become: yes
  changed_when: false
  tags:
    - apache

- name: Install Apache from homebrew
  homebrew:
    name: httpd
    state: present
    install_options: with-brewed-openssl,with-mpm-event
  tags:
    - apache

- name: Install httpd hostname config file
  copy:
    src: "files/apache.cnf.d/hostname.conf"
    dest: "/Volumes/webdev/.httpd/conf.d/hostname.conf"
  tags:
    - apache
  notify: restart httpd

- name: configure httpd.conf (replace)
  replace:
    dest: /usr/local/etc/httpd/httpd.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp: '^( *)# *(LoadModule rewrite_module +.*)$',         replace: '\1\2' }   # Enable rewriting
    - { regexp: '^( *)# *(LoadModule expires_module +.*)$',         replace: '\1\2' }   # Enable caching headers
    - { regexp: '^( *)# *(LoadModule deflate_module +.*)$',         replace: '\1\2' }   # Enable compressing content before delivery
    - { regexp: '^( *)# *(LoadModule headers_module +.*)$',         replace: '\1\2' }   # Enable modification of HTTP headers
    - { regexp: '^( *)# *(LoadModule actions_module +.*)$',         replace: '\1\2' }   # Enable CGI scripts integration
    - { regexp: '^( *User) .*$',                                    replace: '\1 {{ ansible_user_id }}' }
    - { regexp: '^( *Group) .*$',                                   replace: '\1 {{ apache_group }}' }
    - { regexp: '^( *)# *(LoadModule ssl_module +.*)$',             replace: '\1\2' }   # Enable SSL
    - { regexp: '^( *)# *(LoadModule socache_shmcb_module +.*)$',   replace: '\1\2' }   # Enable SSL
    - { regexp: '^( *)# *(Include /usr/local/etc/httpd/extra/httpd-ssl\.conf)$', replace: '\1\2' }   # Enable SSL
    - { regexp: '^( *)# *(Include /usr/local/etc/httpd/extra/httpd-info\.conf)$', replace: '\1\2' }   # Enable server-status check page
    - { regexp: '^( *)# *(LoadModule info_module +.*)$',            replace: '\1\2' }   # Enable server-status check page
  tags:
    - apache
  notify: restart httpd

- name: configure httpd-ssl.conf (replace)
  replace:
    dest: /usr/local/etc/httpd/extra/httpd-ssl.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp: '^( *)((?!\# *))(SSLCertificateFile +)(.*)$',       replace: '\1\3"/Volumes/webdev/.httpd/ssl/selfsigned.crt"' }
    - { regexp: '^( *)((?!\# *))(SSLCertificateKeyFile +)(.*)$',    replace: '\1\3"/Volumes/webdev/.httpd/ssl/private.key"' }
  tags:
    - apache
  notify: restart httpd

- name: configure httpd-info.conf (replace)
  replace:
    dest: /usr/local/etc/httpd/extra/httpd-info.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp: '^( *)(# *)?(Require host +).*$',                   replace: '\1\3localhost' }   # Enable rewriting
  tags:
    - apache
  notify: restart httpd

- name: Add conf.d and vhosts folder to httpd.conf
  lineinfile:
    dest: /usr/local/etc/httpd/httpd.conf
    line: "{{ item.line }}"
  with_items:
    - { line: "Include /Volumes/webdev/.httpd/conf.d" }
    - { line: "Include /Volumes/webdev/.httpd/vhosts" }
  tags:
    - apache

- name: Create apache ssl folder
  file:
    path: /Volumes/webdev/.httpd/ssl
    state: directory
  tags:
    - apache

- stat: path=/Volumes/webdev/.httpd/ssl/selfsigned.crt
  register: httpd_ssl_exists
  changed_when: false
  tags:
    - apache

- name: Create SSL certificate
  command: |
    openssl req \
    -new \
    -newkey rsa:2048 \
    -days 3650 \
    -nodes \
    -x509 \
    -subj /C=BE/ST=Oost-Vlaanderen/L=Gent/O={{ ssl_organization }}/OU=$(whoami)/CN=*.test \
    -keyout /Volumes/webdev/.httpd/ssl/private.key \
    -out /Volumes/webdev/.httpd/ssl/selfsigned.crt
  when: httpd_ssl_exists.stat.exists == false
  tags:
    - apache
  notify: restart httpd

- name: (Auto-)start homebrew Apache
  command: brew services start httpd
  changed_when: false
  tags:
    - apache

- name: Install firewall rule for httpd port forwarding
  copy:
    src: "files/co.echo.httpdfwd.plist"
    dest: "/Library/LaunchDaemons/co.echo.httpdfwd.plist"
  become: yes
  tags:
    - apache

- name: Activate firewall rule for httpd port forwarding
  command: launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist
  become: yes
  changed_when: false
  tags:
    - apache

- name: Add vhost script
  template:
    src: bin/vhost.sh.j2
    dest: /Volumes/webdev/bin/vhost
    mode: 0755
  tags:
    - mariadb

- name: Install MariaDB from homebrew
  homebrew:
    name: mariadb
    state: present
  tags:
    - mariadb

- name: Install MariaDB config files
  copy:
    src: "files/my.cnf.d/{{ item }}"
    dest: "/usr/local/etc/my.cnf.d/{{ item }}"
  with_items:
    - mysqld.cnf
    - innodb.cnf
  tags:
    - mariadb
  notify: restart mariadb

- name: (Auto-)start homebrew MariaDB
  command: brew services start mariadb
  changed_when: false
  tags:
    - mariadb

- name: Add mariadb user .my.cnf
  template:
    src: my.cnf.j2
    dest: $HOME/.my.cnf
    mode: 0600
  tags:
    - mariadb

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: false
  tags:
    - mariadb

- name: Remove anonymous users
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User=''
  changed_when: false
  tags:
    - mariadb

- name: Disallow root login remotely
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false
  tags:
    - mariadb

- name: Remove test database and access to it
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DROP DATABASE IF EXISTS test
    - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
  changed_when: false
  tags:
    - mariadb

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: false
  tags:
    - mariadb

- name: Create databases backup folder
  file:
    path: "{{ mysql_backup_dir }}"
    state: directory
  tags:
    - mariadb

- name: Add backup script for databases
  template:
    src: bin/db_backup.sh.j2
    dest: /Volumes/webdev/bin/db_backup
    mode: 0755
  tags:
    - mariadb

- name: Install pkg-config
  homebrew:
    name: pkg-config
    state: present
  tags:
    - php

- name: Configure php versions
  include_role:
    name: development-web
    tasks_from: "php-versions"
  with_items:
    - 5.6
    - 7.1
    - 7.2
  loop_control:
    loop_var: php_version
  tags:
    - php

- name: Add php files to DirectoryIndex
  replace:
    dest: /usr/local/etc/httpd/httpd.conf
    regexp: '^( *DirectoryIndex) .*$'
    replace: '\1 index.php index.html index.htm'
  tags:
    - apache
    - php

- name: Install httpd php-fpm config file
  copy:
    src: "files/apache.cnf.d/php-fpm.conf"
    dest: "/Volumes/webdev/.httpd/conf.d/php-fpm.conf"
  tags:
    - apache
    - php
  notify: restart httpd

- name: Install .bashrc.d files
  copy:
    src: "files/.bashrc.d/{{ item }}.bashrc"
    dest: "~/.bashrc.d/{{ item }}.bashrc"
  with_items:
    - php-xdebug-on
    - hammp_path
  tags:
    - apache
    - php
    - mariadb

- name: Install mailhog
  homebrew:
    name: mailhog
    state: present
  tags:
    - mailhog

- name: (Auto-)start homebrew mailhog
  command: brew services start mailhog
  changed_when: false
  tags:
    - mailhog

- name: Set mailhog as relayhost for postfix
  lineinfile:
    dest: /etc/postfix/main.cf
    line: relayhost = 127.0.0.1:1025
  become: yes
  tags:
    - postfix
    - mailhog
